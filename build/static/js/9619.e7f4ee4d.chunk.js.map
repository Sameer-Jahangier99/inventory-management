{"version":3,"file":"static/js/9619.e7f4ee4d.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","services/actions/complaintActions.js","views/pages/staff-complaints/AllComplaints.js"],"sourcesContent":["import React from 'react'\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst Breadcrumbs = (props) => {\n  return (\n    <div className=\"row bg-white pt-2 pl-2 mb-4 \" style={{ margin: '0px 1px' }}>\n      <div className=\"col-12  \">\n        <CBreadcrumb\n          className=\"d-flex  align-items-center\"\n          style={{ '--cui-breadcrumb-divider': \"'>'\" }}\n        >\n          {props.breadCrumbsInfo &&\n            props.breadCrumbsInfo.length &&\n            props.breadCrumbsInfo.map((item) => {\n              return (\n                <CBreadcrumbItem href={item.href ? item.href : null}>{item.name}</CBreadcrumbItem>\n              )\n            })}\n        </CBreadcrumb>\n      </div>\n    </div>\n  )\n}\n\nexport default Breadcrumbs\n","import {\n  ADD_COMPLAINT_REQUEST,\n  ADD_COMPLAINT_SUCCESS,\n  ADD_COMPLAINT_FAIL,\n  ALL_COMPLAINT_REQUEST,\n  ALL_COMPLAINT_SUCCESS,\n  ALL_COMPLAINT_FAIL,\n  COMPLAINT_DCO_APPROVE_REQUEST,\n  COMPLAINT_DCO_APPROVE_SUCCESS,\n  COMPLAINT_DCO_APRROVE_FAIL,\n  COMPLAINT_DCO_REJECT_REQUEST,\n  COMPLAINT_DCO_REJECT_SUCCESS,\n  COMPLAINT_DCO_REJECT_FAIL,\n} from '../constants/complaintConstants'\nimport axios from 'axios'\nimport {BASE_URL} from \"../../services/axios\"\n\nexport const addComplaint = (Data) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADD_COMPLAINT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`${BASE_URL}/complaint`, Data, config)\n\n    dispatch({\n      type: ADD_COMPLAINT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ADD_COMPLAINT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const allComplaintAction = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ALL_COMPLAINT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`${BASE_URL}/complaint`, config)\n\n    dispatch({\n      type: ALL_COMPLAINT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ALL_COMPLAINT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const complaintApproveByDco = (_id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: COMPLAINT_DCO_APPROVE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`${BASE_URL}/complaint/approvedByDco`, { _id }, config)\n\n    dispatch({\n      type: COMPLAINT_DCO_APPROVE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: COMPLAINT_DCO_APRROVE_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const complaintRejectByDco = (_id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: COMPLAINT_DCO_REJECT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`${BASE_URL}/complaint/rejectedByDco`, { _id }, config)\n\n    dispatch({\n      type: COMPLAINT_DCO_REJECT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: COMPLAINT_DCO_REJECT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { allComplaintAction } from 'src/services/actions/complaintActions'\nimport { CRow, CCol, CFormSelect } from '@coreui/react'\n\nimport { Modal, Button } from 'react-bootstrap'\nimport axios from 'axios'\nimport { BASE_URL } from 'src/services/axios'\nimport Breadcrumbs from 'src/components/Breadcrumbs'\n\nconst AllComplaints = () => {\n  const breadCrumbsInfo = [\n    { name: 'Home', href: '/' },\n    { name: 'Complaints' },\n    { name: 'All Complaints' },\n  ]\n  const dispatch = useDispatch()\n  const [showSoftware, setShowSoftware] = useState(false)\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n  const [allComplaints, setAllComplaints] = useState([])\n  const [complaintHistory, setComplaintHistory] = useState([])\n  const [modalShow, setModalShow] = React.useState(false)\n  const [refresh, setRefresh] = useState(false)\n  const [deleteId, setDeleteId] = useState('')\n  // useEffect(async () => {\n  //     dispatch(allComplaintAction());\n  //     const config = {\n  //         headers: {\n  //             'Content-Type': 'application/json',\n  //             Authorization: `Bearer ${userInfo.token}`,\n  //         },\n  //     }\n  //     const { data } = await axios.get(`${BASE_URL}/complaint/all/software`, config)\n  //     setAllComplaints(data && data.data);\n\n  //     setShowSoftware(true);\n  // }, [dispatch, refresh])\n  // const hardwareComplaint = async () => {\n  //     const config = {\n  //         headers: {\n  //             'Content-Type': 'application/json',\n  //             Authorization: `Bearer ${userInfo.token}`,\n  //         },\n  //     }\n  //     const { data } = await axios.get(`${BASE_URL}/complaint/all/hardware`, config)\n  //     setAllComplaints(data && data.data);\n  //     setShowSoftware(false);\n  // }\n\n  // const softwareComplaints = async () => {\n  //     const config = {\n  //         headers: {\n  //             'Content-Type': 'application/json',\n  //             Authorization: `Bearer ${userInfo.token}`,\n  //         },\n  //     }\n  //     const { data } = await axios.get(`${BASE_URL}/complaint/all/software`, config)\n  //     setAllComplaints(data && data.data);\n  //     setShowSoftware(true);\n  // }\n\n  useEffect(async () => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    const { data } = await axios.get(`${BASE_URL}/complaint`, config)\n    console.log('data===>', data)\n    setAllComplaints(data && data)\n    setComplaintHistory(data && data)\n  }, [])\n\n  const filterHandler = (value) => {\n    if (value == 'software') {\n      const result = complaintHistory.filter((item) => item.type === 'software')\n      setAllComplaints(result)\n    }\n    if (value == 'hardware') {\n      const result = complaintHistory.filter((item) => item.type === 'hardware')\n      setAllComplaints(result)\n    }\n    if (value == 'network') {\n      const result = complaintHistory.filter((item) => item.type === 'network')\n      setAllComplaints(result)\n    }\n    if (value == 'other') {\n      const result = complaintHistory.filter((item) => item.type === 'other')\n      setAllComplaints(result)\n    }\n    if (value == 'all') {\n      setAllComplaints(complaintHistory)\n    }\n  }\n\n  const deleteHandler = (id) => {\n    setDeleteId(id)\n    setModalShow(true)\n  }\n\n  const deleteComplaint = async () => {\n    const { data } = await axios.delete(`${BASE_URL}/complaint/delete/${deleteId}`)\n    if (data.success) {\n      setDeleteId('')\n      setModalShow(false)\n      setRefresh(true)\n    }\n  }\n\n  const editHandler = (item) => {\n    console.log('update handler')\n  }\n\n  function MyVerticallyCenteredModal(props) {\n    return (\n      <Modal {...props} size=\"md\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n        <Modal.Body className=\"\">\n          <div className=\"d-flex justify-content-between\">\n            <h4>Are you sure ?</h4>\n            <i\n              className=\"fa fa-times mouse-over \"\n              aria-hidden=\"true\"\n              onClick={() => setModalShow(false)}\n            ></i>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-12 d-flex justify-content-center\">\n              <Button\n                variant=\"danger\"\n                size=\"lg\"\n                onClick={deleteComplaint}\n                className=\"mouse-over\"\n                style={{ width: '10rem' }}\n              >\n                Yes\n              </Button>{' '}\n              <Button\n                variant=\"warning\"\n                size=\"lg\"\n                className=\"ml-3 mouse-over\"\n                onClick={() => setModalShow(false)}\n                style={{ width: '10rem' }}\n              >\n                No\n              </Button>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n    )\n  }\n  return (\n    <>\n      <main className=\"main-div\">\n        <Breadcrumbs breadCrumbsInfo={breadCrumbsInfo} />\n        <div className=\"row\">\n          <div className=\"col-6\"></div>\n          <div className=\"col-6\">\n            <div className=\"row\">\n              <div className=\"col-6 d-flex justify-content-center\">\n                <div className=\"d-flex justify-content-center align-items-center mr-3\">\n                  Complaints\n                </div>\n\n                <CFormSelect\n                  aria-label=\"Default select example\"\n                  onChange={(e) => {\n                    filterHandler(e.target.value)\n                  }}\n                >\n                  <option value=\"all\">All</option>\n                  <option value=\"software\">Software</option>\n\n                  <option value=\"hardware\">Hardware</option>\n                  <option value=\"network\">Network</option>\n                  <option value=\"other\">other equipment</option>\n                </CFormSelect>\n              </div>\n              <div className=\"col-6\"></div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <h4 className=\"font-semibold\">All Complaints</h4>\n        </div>\n        <div className=\"flex flex-col\">\n          <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n            <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n              <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Title\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Lab\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Added By\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Type\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        DCO Aprroved\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Committee Aprroved\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Noc Status\n                      </th>{' '}\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Works Status\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Edit\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {allComplaints &&\n                      allComplaints.map((item) => (\n                        <tr key={item._id}>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <div className=\"ml-4\">\n                                <div className=\"text-sm font-medium text-gray-900\">\n                                  {item.title}\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-2 py-2 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <div className=\"ml-4\">\n                                <div className=\"text-sm font-medium text-gray-900\">\n                                  {item.lab && item.lab.name}\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n\n                          <td className=\"px-2 py-2 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <div className=\"ml-4\">\n                                <div className=\"text-sm font-medium text-gray-900\">\n                                  {item.user && item.user.name}\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-2 py-2 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <div className=\"ml-4\">\n                                <div className=\"text-sm font-medium text-gray-900\">\n                                  {item && item.type && item.type}\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {item.dcoApproved ? 'Approved' : 'pending'}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {item.committeApproved ? 'Approved' : 'pending'}\n                          </td>\n                         \n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {item.type != \"hardware\" ?  item.nocApproved ? 'Approved' : 'pending' : null}\n                            </td>\n                        \n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {item.type == \"hardware\" ?  item.worksApproved ? 'Approved' : 'pending' : null}\n                            </td>\n                      \n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                           \n                            <button\n                              style={{ padding: '5px' }}\n                              onClick={() => deleteHandler(item._id)}\n                            >\n                              <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n      <MyVerticallyCenteredModal show={modalShow} onHide={() => setModalShow(false)} />\n    </>\n  )\n}\n\nexport default AllComplaints\n"],"names":["props","className","style","margin","breadCrumbsInfo","length","map","item","href","name","addComplaint","Data","dispatch","getState","type","ADD_COMPLAINT_REQUEST","userInfo","userLogin","config","headers","Authorization","token","axios","BASE_URL","data","ADD_COMPLAINT_SUCCESS","payload","ADD_COMPLAINT_FAIL","response","message","complaintApproveByDco","_id","COMPLAINT_DCO_APPROVE_REQUEST","COMPLAINT_DCO_APPROVE_SUCCESS","COMPLAINT_DCO_APRROVE_FAIL","complaintRejectByDco","COMPLAINT_DCO_REJECT_REQUEST","COMPLAINT_DCO_REJECT_SUCCESS","COMPLAINT_DCO_REJECT_FAIL","useDispatch","useState","useSelector","state","allComplaints","setAllComplaints","complaintHistory","setComplaintHistory","React","modalShow","setModalShow","setRefresh","deleteId","setDeleteId","useEffect","console","log","deleteComplaint","success","MyVerticallyCenteredModal","size","centered","onClick","variant","width","onChange","e","value","result","filter","filterHandler","target","scope","title","lab","user","dcoApproved","committeApproved","nocApproved","worksApproved","padding","id","class","show","onHide"],"sourceRoot":""}