{"version":3,"file":"static/js/6067.8bfab3f5.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","views/components/admin/AddUser.js"],"sourcesContent":["import React from 'react'\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst Breadcrumbs = (props) => {\n  return (\n    <div className=\"row bg-white pt-2 pl-2 mb-4 \" style={{ margin: '0px 1px' }}>\n      <div className=\"col-12  \">\n        <CBreadcrumb\n          className=\"d-flex  align-items-center\"\n          style={{ '--cui-breadcrumb-divider': \"'>'\" }}\n        >\n          {props.breadCrumbsInfo &&\n            props.breadCrumbsInfo.length &&\n            props.breadCrumbsInfo.map((item) => {\n              return (\n                <CBreadcrumbItem href={item.href ? item.href : null}>{item.name}</CBreadcrumbItem>\n              )\n            })}\n        </CBreadcrumb>\n      </div>\n    </div>\n  )\n}\n\nexport default Breadcrumbs\n","import React, { useState } from 'react'\nimport validator from 'validator'\nimport {\n  CRow,\n  CCol,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CAlert,\n  CFormSelect,\n} from '@coreui/react'\nimport { register } from 'src/services/actions/userActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Breadcrumbs from 'src/components/Breadcrumbs'\nconst AddUser = () => {\n  const breadCrumbsInfo = [{ name: \"Home\", href: '/' }, { name: \"Users\" }, { name: \"Add User\" }];\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [role, setRole] = useState('')\n  const [phone, setPhone] = useState('')\n  const [noMatch, setNoMatch] = useState(false)\n  const [passErr, setPassErr] = useState(false)\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { error, result } = userRegister\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setNoMatch(true)\n    } else if (validator.isStrongPassword(password, {\n      minLength: 8, minLowercase: 1,\n      minUppercase: 1, minNumbers: 1, minSymbols: 1\n    })) {\n      dispatch(register(name, email, password, role, phone))\n    }\n    else {\n      setPassErr(true)\n    }\n\n  }\n  return (\n    <>\n      <main>\n        <Breadcrumbs breadCrumbsInfo={breadCrumbsInfo} />\n        <div className=\"bg-white p-3 shadow-sm rounded-sm mt-3\">\n          <CRow className=\"justify-content-center\">\n            <CCol md={12} className=\"bg-white rounded-lg\">\n              <CForm className=\"row mx-4 g-3\" onSubmit={submitHandler}>\n                <CCol md={12}>\n                  {error && (\n                    <CAlert color=\"danger\" style={{ textAlign: 'center' }}>\n                      {error}\n                    </CAlert>\n                  )}\n                </CCol>\n                <CCol md={12}>\n                  {result && (\n                    <CAlert color=\"success\" style={{ textAlign: 'center' }}>\n                      {result}\n                    </CAlert>\n                  )}\n                </CCol>\n                <CCol md={12}>\n                  <p className=\"text-gray-800 dark:text-gray-200 text-xl font-bold\">Add New User</p>\n                </CCol>\n                <CCol md={6}>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Username\"\n                      autoComplete=\"username\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                      required\n                    />\n                  </CInputGroup>\n                </CCol>\n                <CCol md={6}>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <i className=\"fas fa-envelope-open\"></i>\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"text\"\n                      placeholder=\"Email\"\n                      autoComplete=\"user@gmail.com\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      required\n                    />\n                  </CInputGroup>\n                </CCol>\n                <CCol md={6}>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </CInputGroup>\n                  {noMatch && <span className=\"text-red-500 mb-5\">Password not match</span>}\n                  {passErr && <span className=\"text-red-500 mb-5\">Password must contain 8 letter,uppercase,lowercase,symbol & number</span>}\n                </CCol>\n                <CCol md={6}>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      required\n                    />\n                  </CInputGroup>\n                  {noMatch && <span className=\"text-red-500 mb-5\">Password not match</span>}\n                  {passErr && <span className=\"text-red-500 mb-5\">Password must contain 8 letter,uppercase,lowercase,symbol & number</span>}\n                </CCol>\n                <CCol xs={6} className=\"mb-4\">\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <i className=\"fas fa-user-tag\"></i>\n                    </CInputGroupText>\n                    <CFormSelect\n                      aria-label=\"Default select example\"\n                      onChange={(e) => {\n                        setRole(e.target.value)\n                      }}\n                    >\n                      <option>Select User Role</option>\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"labstaff\">Lab Staff</option>\n                      <option value=\"committee\">Committee</option>\n                      <option value=\"dco\">DCO</option>\n                      <option value=\"hod\">HOD</option>\n                      <option value=\"noc\">NOC</option>\n                      <option value=\"teacher\">Teacher</option>\n                    </CFormSelect>\n                  </CInputGroup>\n                </CCol>\n                <CCol xs={6}>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <i className=\"fas fa-phone\"></i>\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Phone number\"\n                      autoComplete=\"\"\n                      value={phone}\n                      onChange={(e) => setPhone(e.target.value)}\n                      required\n                    />\n                  </CInputGroup>\n                </CCol>\n                <CRow className=\"flex items-center justify-start mb-3\">\n                  <CCol md={3} xs={8}>\n                    <button\n                      type=\"submit\"\n                      className=\"py-2 px-4 mt-2 bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \"\n                    >\n                      Add User\n                    </button>\n                  </CCol>\n                </CRow>\n              </CForm>\n            </CCol>\n          </CRow>\n        </div>\n      </main>\n    </>\n  )\n}\n\nexport default AddUser\n"],"names":["props","className","style","margin","breadCrumbsInfo","length","map","item","href","name","useState","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","role","setRole","phone","setPhone","noMatch","setNoMatch","passErr","setPassErr","dispatch","useDispatch","userRegister","useSelector","state","error","result","md","onSubmit","e","preventDefault","validator","minLength","minLowercase","minUppercase","minNumbers","minSymbols","register","color","textAlign","placeholder","autoComplete","value","onChange","target","required","type","xs"],"sourceRoot":""}