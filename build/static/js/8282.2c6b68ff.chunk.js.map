{"version":3,"file":"static/js/8282.2c6b68ff.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","services/actions/productActions.js","utils.js/imageUrl.js","views/pages/Inventory/AllEquipments.js"],"sourcesContent":["import React from 'react'\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst Breadcrumbs = (props) => {\n  return (\n    <div className=\"row bg-white pt-2 pl-2 mb-4 \" style={{ margin: '0px 1px' }}>\n      <div className=\"col-12  \">\n        <CBreadcrumb\n          className=\"d-flex  align-items-center\"\n          style={{ '--cui-breadcrumb-divider': \"'>'\" }}\n        >\n          {props.breadCrumbsInfo &&\n            props.breadCrumbsInfo.length &&\n            props.breadCrumbsInfo.map((item) => {\n              return (\n                <CBreadcrumbItem href={item.href ? item.href : null}>{item.name}</CBreadcrumbItem>\n              )\n            })}\n        </CBreadcrumb>\n      </div>\n    </div>\n  )\n}\n\nexport default Breadcrumbs\n","import {\n  ADD_PRODUCT_REQUEST,\n  ADD_PRODUCT_SUCCESS,\n  ADD_PRODUCT_FAIL,\n  ALL_PRODUCT_REQUEST,\n  ALL_PRODUCT_SUCCESS,\n  ALL_PRODUCT_FAIL,\n  FIND_PRODUCT_REQUEST,\n  FIND_PRODUCT_SUCCESS,\n  FIND_PRODUCT_FAIL,\n  UPDATE_PRODUCT_SUCCESS,\n  UPDATE_PRODUCT_FAIL,\n  UPDATE_PRODUCT_REQUEST,\n} from '../constants/ProductConstants'\n\nimport axios from 'axios'\nimport {BASE_URL} from \"../../services/axios\"\n\nexport const allProducts = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`${BASE_URL}/product`, config)\n\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const uploadProduct = (formData) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADD_PRODUCT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`${BASE_URL}/product`, formData, config)\n\n    dispatch({\n      type: ADD_PRODUCT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ADD_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const findProductByQrId = (qrId) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: FIND_PRODUCT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`${BASE_URL}/product/qrId`, { qrId }, config)\n\n    dispatch({\n      type: FIND_PRODUCT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: FIND_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const updateProducts = (formData) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: UPDATE_PRODUCT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`${BASE_URL}/product`, formData, config)\n\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n","export const imageUrl = 'https://ims-backend-app.herokuapp.com/public/images/'","import React, { useEffect, useState, useRef } from 'react'\nimport {\n  CRow,\n  CCol,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CCardBody,\n  CFormSelect,\n  CCard,\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CModalTitle,\n  CButton,\n  CAlert\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allProducts, deleteProduct, updateProducts } from \"src/services/actions/productActions\"\nimport { useHistory } from \"react-router-dom\"\nimport { imageUrl } from 'src/utils.js/imageUrl'\nimport Breadcrumbs from 'src/components/Breadcrumbs'\nimport { Modal, Button } from 'react-bootstrap';\n\nimport axios from 'axios';\nimport { BASE_URL } from 'src/services/axios';\n\nconst AllEquipments = () => {\n  const breadCrumbsInfo = [{ name: \"Home\", href: '/' }, { name: \"Inventory\" }, { name: \"All Equipment\" }];\n  const [name, setName] = useState(null);\n  const [specification, setSpecification] = useState([])\n  const [key, setKey] = useState(null);\n  const [value, setValue] = useState(null);\n  const [lab, setLab] = useState('');\n  const [uploadedFileName, setUploadedFileName] = useState(null);\n  const [productImage, setProductImage] = useState('');\n  const inputRef = useRef(null);\n  const [qrId, setQrId] = useState();\n  const [id, setId] = useState();\n  const [visible, setVisible] = useState(false)\n  const [show, setShow] = useState(false)\n  const [deleteId, setDeleteId] = useState(\"\");\n  const [modalShow, setModalShow] = React.useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [index, setIndex] = useState();\n  const history = useHistory();\n\n  const { products, error } = useSelector((state) => state.allProductRed)\n  const { loading } = useSelector((state) => state.updateProduct)\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  console.log(products)\n\n  useEffect(() => {\n    dispatch(allProducts())\n  }, [dispatch, loading, refresh])\n  const editHandler = (product) => {\n    setName(product.name)\n    setSpecification(product.specification)\n    setLab(product.lab)\n    setQrId(product.qrId)\n    setId(product._id);\n    setVisible(true)\n  }\n\n  const specificationHandler = (e) => {\n    e.preventDefault();\n    console.log(\"key\", key);\n    console.log(\"index\", index);\n    let data = {\n      key, value\n    }\n    let arr = [];\n    specification.map((item) => {\n      arr.push(item);\n    })\n    arr[index] = data;\n    setSpecification(arr)\n  }\n\n\n  const handleDisplayFileDetails = () => {\n    inputRef.current?.files &&\n      setUploadedFileName(inputRef.current.files[0].name);\n    setProductImage(inputRef.current.files[0]);\n\n  };\n\n  const deleteHandler = (id) => {\n    setDeleteId(id);\n    setModalShow(true)\n  }\n\n  const editSpecHandler = (item, idx) => {\n    setIndex(idx);\n    setKey(item.key)\n    setValue(item.value)\n    setShow(true)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (productImage) {\n      const formData = new FormData();\n      formData.append('_id', id)\n      formData.append(\"productImage\", productImage, productImage.name);\n      dispatch(updateProducts(formData))\n    } else {\n      let data = {\n        name, _id: id, specification, lab\n      }\n      console.log(\"data\", data);\n    }\n    // dispatch(updateProducts(formData))\n  }\n\n  const deleteComplaint = async () => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    const { data } = await axios.delete(`${BASE_URL}/product/${deleteId}`, config)\n    console.log(data)\n    if (data.success) {\n      setDeleteId(\"\");\n      setModalShow(false)\n      setRefresh(true)\n    }\n  }\n\n\n  function MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n\n        <Modal.Body className=\"\">\n          <div className='d-flex justify-content-between'>\n            <h4>Are you sure ?</h4>\n            <i className=\"fa fa-times mouse-over \" aria-hidden=\"true\" onClick={() => setModalShow(false)}></i>\n          </div>\n\n          <div className='row'>\n            <div className='col-12 d-flex justify-content-center'>\n              <Button variant=\"danger\" size=\"lg\" onClick={deleteComplaint} className=\"mouse-over\" style={{ width: \"10rem\" }}>\n                Yes\n              </Button>{' '}\n              <Button variant=\"warning\" size=\"lg\" className='ml-3 mouse-over' onClick={() => setModalShow(false)} style={{ width: \"10rem\" }}>\n                No\n              </Button>\n            </div>\n          </div>\n        </Modal.Body>\n\n      </Modal>\n    );\n  }\n\n\n  return (\n    <>\n      <main className='main-div'>\n        <Breadcrumbs breadCrumbsInfo={breadCrumbsInfo} />\n        <div>\n          <h4 className=\"font-semibold\">All Product</h4>\n        </div>\n        <div className=\"flex flex-col\">\n          <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n            <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n              <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Name\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Image\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Lab\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Qr Code\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Added By\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Edit\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {products &&\n                      products.map((product) => (\n                        <tr key={product._id}>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <div className=\"ml-4\">\n                                <div className=\"text-sm font-medium text-gray-900\">{product.name}</div>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-2 py-2 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <div className=\"ml-4\">\n                                <img style={{ width: \"7rem\", height: \"7rem\", objectFit: \"cover\" }} src={`${imageUrl}${product.productImage}`} alt={product.name} ></img>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {product.lab && product.lab.name && product.lab.name }\n                          </td>\n                          <td className=\"px-2 py-2 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <div className=\"ml-4\">\n                                <a href={product.imageUrl} download>\n                                  <img style={{ width: \"7rem\", height: \"7rem\" }} src={product.imageUrl} alt={product.name} ></img>\n                                </a>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {product.user && product.user.name}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <button onClick={() => editHandler(product)}>\n                              <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                            </button>\n                            {/* <button onClick={() => history.push(`/viewEquipment/${product._id}`)}>\n                              view\n                            </button> */}\n                            <button\n                              style={{ padding: '5px' }}\n                              onClick={() => deleteHandler(product._id)}\n                            >\n                              <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <CModal alignment=\"center\" size='lg' visible={visible} onClose={() => setVisible(false)}>\n          <CModalHeader>\n            <CModalTitle>\n              <p className=\"text-gray-800 dark:text-gray-200 text-xl font-bold\">Update Product</p>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <CRow className='justify-content-center'>\n              <CForm className='row mx-4 g-3'>\n                <CCol md={6}>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <i class=\"fas fa-signature\"></i>\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Enter Name\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </CInputGroup>\n                </CCol>\n                <CCol md={6}>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <i class=\"fas fa-laptop\"></i>\n                    </CInputGroupText>\n                    <CFormSelect\n                      aria-label=\"Default select example\"\n                      value={lab}\n                      onChange={(e) => {\n                        setLab(e.target.value)\n                      }}\n\n                    >\n                      <option>Select Lab</option>\n                      <option value=\"Lab-1\">Lab-1</option>\n                      <option value=\"Lab-2\">Lab-2</option>\n                      <option value=\"Lab-3\">Lab-3</option>\n                      <option value=\"Lab-4\">Lab-4</option>\n                    </CFormSelect>\n                  </CInputGroup>\n                </CCol>\n                <CRow className='my-3'>\n                  <CCol md={3}>\n                    <p className=\"text-gray-800 dark:text-gray-200 text-xl font-bold\">\n                      Update Picture\n                    </p>\n                  </CCol>\n                  <CCol md={6}>\n                    <input\n                      ref={inputRef}\n                      onChange={handleDisplayFileDetails}\n                      type=\"file\"\n                    />\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md={12}>\n                    <p className=\"text-gray-800 dark:text-gray-200 text-xl font-bold\">Update specification</p>\n                  </CCol>\n                </CRow>\n                <CRow className='my-4'>\n                  <CCol md={12} className=\"d-flex justify-content-center align-items-center\">\n                    <CCol md={4} className=''>\n                      <CInputGroup >\n                        <CInputGroupText>\n                          <i class=\"fas fa-star\"></i>\n                        </CInputGroupText>\n                        <CFormInput\n                          placeholder=\"Enter Name\"\n                          value={key}\n                          onChange={(e) => setKey(e.target.value)}\n                        />\n                      </CInputGroup>\n                    </CCol>\n                    <CCol md={1}>\n                    </CCol>\n                    <CCol md={5} className=''>\n                      <CInputGroup >\n                        <CInputGroupText>\n                          <i class=\"fas fa-star\"></i>\n                        </CInputGroupText>\n                        <CFormInput\n                          placeholder=\"Enter Value\"\n                          value={value}\n                          onChange={(e) => setValue(e.target.value)}\n                        />\n                      </CInputGroup>\n                    </CCol>\n                    <CCol md={2} className=''>\n                      <button\n                        className=\" ml-2 py-2 px-4  bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white  transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg\"\n                        onClick={(e) => specificationHandler(e)}\n                      >\n                        Update\n                      </button>\n                    </CCol>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md={12} >\n                    {specification && specification.map((item, index) => {\n                      return <CCard key={index} className='d-flex justify-content-center mt-2'>\n                        <CCardBody className='d-flex'>\n                          <CCol md={11} className='d-flex justify-content-start'>\n                            <div className='mx-3'>\n                              <p><span className=\"text-gray-800 dark:text-gray-200 text-md font-bold\">Name:&nbsp; &nbsp;</span>{item.key}</p>\n\n                            </div>\n\n                            <div className='mx-3'>\n                              <p><span className=\"text-gray-800 dark:text-gray-200 text-md font-bold\">Value: &nbsp; &nbsp;</span>{item.value}</p>\n\n                            </div>\n                          </CCol>\n                          <CCol md={1}>\n\n                            <CButton color='info' variant='ghost' onClick={() => editSpecHandler(item, index)}>\n                              <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                            </CButton>\n                          </CCol>\n\n                        </CCardBody>\n                      </CCard>\n                    })}\n                  </CCol>\n                </CRow>\n              </CForm>\n\n            </CRow>\n          </CModalBody>\n          <CModalFooter>\n            <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n              Close\n            </CButton>\n            <CButton color=\"primary\" onClick={submitHandler}> {loading ? \"Loading\" : \"upload Product\"}</CButton>\n          </CModalFooter>\n        </CModal>\n        <MyVerticallyCenteredModal\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n        />\n      </main>\n\n    </>\n  )\n}\n\nexport default AllEquipments\n"],"names":["props","className","style","margin","breadCrumbsInfo","length","map","item","href","name","allProducts","dispatch","getState","type","ALL_PRODUCT_REQUEST","userInfo","userLogin","config","headers","Authorization","token","axios","BASE_URL","data","ALL_PRODUCT_SUCCESS","payload","ALL_PRODUCT_FAIL","response","message","uploadProduct","formData","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAIL","findProductByQrId","qrId","FIND_PRODUCT_REQUEST","FIND_PRODUCT_SUCCESS","FIND_PRODUCT_FAIL","updateProducts","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","imageUrl","useState","setName","specification","setSpecification","key","setKey","value","setValue","lab","setLab","setUploadedFileName","productImage","setProductImage","inputRef","useRef","setQrId","id","setId","visible","setVisible","setShow","deleteId","setDeleteId","React","modalShow","setModalShow","refresh","setRefresh","index","setIndex","useHistory","useSelector","state","allProductRed","products","loading","error","updateProduct","useDispatch","console","log","useEffect","deleteComplaint","success","MyVerticallyCenteredModal","size","centered","onClick","variant","width","scope","product","height","objectFit","src","alt","download","user","_id","editHandler","class","padding","deleteHandler","alignment","onClose","md","placeholder","onChange","e","target","ref","current","files","preventDefault","arr","push","specificationHandler","color","idx","editSpecHandler","FormData","append","show","onHide"],"sourceRoot":""}