{"version":3,"file":"static/js/5023.1079d17a.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","services/actions/productActions.js","views/pages/Inventory/AddEquipment.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import React from 'react'\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst Breadcrumbs = (props) => {\n  return (\n    <div className=\"row bg-white pt-2 pl-2 mb-4 \" style={{ margin: '0px 1px' }}>\n      <div className=\"col-12  \">\n        <CBreadcrumb\n          className=\"d-flex  align-items-center\"\n          style={{ '--cui-breadcrumb-divider': \"'>'\" }}\n        >\n          {props.breadCrumbsInfo &&\n            props.breadCrumbsInfo.length &&\n            props.breadCrumbsInfo.map((item) => {\n              return (\n                <CBreadcrumbItem href={item.href ? item.href : null}>{item.name}</CBreadcrumbItem>\n              )\n            })}\n        </CBreadcrumb>\n      </div>\n    </div>\n  )\n}\n\nexport default Breadcrumbs\n","import {\n  ADD_PRODUCT_REQUEST,\n  ADD_PRODUCT_SUCCESS,\n  ADD_PRODUCT_FAIL,\n  ALL_PRODUCT_REQUEST,\n  ALL_PRODUCT_SUCCESS,\n  ALL_PRODUCT_FAIL,\n  FIND_PRODUCT_REQUEST,\n  FIND_PRODUCT_SUCCESS,\n  FIND_PRODUCT_FAIL,\n  UPDATE_PRODUCT_SUCCESS,\n  UPDATE_PRODUCT_FAIL,\n  UPDATE_PRODUCT_REQUEST,\n} from '../constants/ProductConstants'\n\nimport axios from 'axios'\nimport {BASE_URL} from \"../../services/axios\"\n\nexport const allProducts = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`${BASE_URL}/product`, config)\n\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const uploadProduct = (formData) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADD_PRODUCT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`${BASE_URL}/product`, formData, config)\n\n    dispatch({\n      type: ADD_PRODUCT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ADD_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const findProductByQrId = (qrId) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: FIND_PRODUCT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`${BASE_URL}/product/qrId`, { qrId }, config)\n\n    dispatch({\n      type: FIND_PRODUCT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: FIND_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const updateProducts = (formData) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: UPDATE_PRODUCT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`${BASE_URL}/product`, formData, config)\n\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport QRCode from 'qrcode'\nimport QrReader from 'react-qr-reader'\nimport {\n  CRow,\n  CCol,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CCardBody,\n  CFormSelect,\n  CCard,\n  CAlert\n} from '@coreui/react'\nimport { uploadProduct } from \"../../../services/actions/productActions\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport Breadcrumbs from 'src/components/Breadcrumbs'\nimport axios from 'axios'\nimport {BASE_URL} from \"../../../services/axios\"\n\nconst AddEquipments = () => {\n  const breadCrumbsInfo = [{ name: \"Home\", href: '/' }, { name: \"Inventory\" }, { name: \"Add Equipment\" }];\n  const [imageUrl, setImageUrl] = useState('')\n  const [qrId, setQrId] = useState();\n  const [name, setName] = useState('');\n  const [specification, setSpecification] = useState([])\n  const [key, setKey] = useState('');\n  const [value, setValue] = useState('');\n  const [lab, setLab] = useState('');\n  const [uploadedFileName, setUploadedFileName] = useState(null);\n  const[labs, setLabs] = useState([]);\n  const[labId, setLabId] = useState();\n  const [productImage, setProductImage] = useState('');\n  const inputRef = useRef(null);\n  const qrRef = useRef(null)\n  const dispatch = useDispatch()\n  const { loading, product, error } = useSelector((state) => state.addProduct)\n\n  const generateQrCode = async (e) => {\n    e.preventDefault()\n    try {\n      const id = Date.now().toString(36) + Math.random().toString(36)\n      const response = await QRCode.toDataURL(id)\n      setImageUrl(response)\n      setQrId(id);\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n  useEffect(async()=>{\n    const { data } = await axios.get(`${BASE_URL}/lab/` )\n    \n      setLabs(data && data);\n   \n  },[])\n  const specificationHandler = (e, key, value) => {\n    e.preventDefault();\n    if (key && value) {\n      const data = {\n        key,\n        value\n      }\n      setSpecification([...specification, data]);\n    }\n  }\n\n  const handleDisplayFileDetails = () => {\n    inputRef.current?.files &&\n      setUploadedFileName(inputRef.current.files[0].name);\n    setProductImage(inputRef.current.files[0]);\n\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    console.log(specification);\n    if (productImage && name && lab && specification) {\n     \n      const formData = new FormData();\n      formData.append(\"productImage\", productImage, productImage.name);\n      formData.append('name', name);\n      //formData.append('specification', specification);\n      formData.append('specification', JSON.stringify(specification));\n      formData.append('lab', lab)\n      formData.append('imageUrl', imageUrl)\n      formData.append('qrId', qrId)\n      dispatch(uploadProduct(formData))\n      console.log(formData);\n    }\n  }\n\n\n\n  return (\n    <>\n      <main className='main-div'>\n        <Breadcrumbs breadCrumbsInfo={breadCrumbsInfo} />\n        <div className=\"bg-white p-3 shadow-sm rounded-sm mt-3\">\n          <CRow>\n            <CCol md={12}>\n              {error && (\n                <CAlert color=\"danger\" style={{ textAlign: 'center' }}>\n                  {error}\n                </CAlert>\n              )}\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol md={12}>\n              {product && (\n                <CAlert color=\"success\" style={{ textAlign: 'center' }}>\n                  {product.message}\n                </CAlert>\n              )}\n            </CCol>\n          </CRow>\n          <CRow className=\"justify-content-center\">\n            <CCol md={12}>\n              <p className=\"text-gray-800 dark:text-gray-200 text-xl font-bold\">Add New Product</p>\n            </CCol>\n            <CCol md={12} className=\"bg-white rounded-lg\">\n              <CForm className=\"row mx-4 g-3\"  >\n                <CCol md={6}>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <i class=\"fas fa-signature\"></i>\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Enter Name\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </CInputGroup>\n                </CCol>\n                <CCol md={6}>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <i class=\"fas fa-laptop\"></i>\n                    </CInputGroupText>\n                    <CFormSelect\n                      aria-label=\"Default select example\"\n                      onChange={(e) => {\n                        setLab(e.target.value)\n                        \n                      }}\n                    >\n                      <option>Select Lab</option>\n                      {labs.length && labs.map((item)=> {\n return <option value={item._id}>{item.name}</option>\n                      })}\n                    </CFormSelect>\n                  </CInputGroup>\n                </CCol>\n                <CRow className=\"my-4\">\n                  <CCol md={3} >\n                    <CInputGroup >\n                      <button\n\n                        className=\"py-2 px-4  bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg\"\n                        onClick={(e) => generateQrCode(e)}\n                      >\n                        Generate Qr Code\n                      </button>\n                    </CInputGroup>\n                  </CCol>\n                  <CCol md={3} className='mt-0'>\n                    <CInputGroup className=\"d-flex justify-content-center align-items-center\">\n                      {imageUrl ? (\n                        <a href={imageUrl} download>\n                          <img src={imageUrl} alt=\"img\" />\n                        </a>\n                      ) : null}\n                    </CInputGroup>\n                  </CCol>\n                  <CCol md={6}>\n                    <input\n                      ref={inputRef}\n                      onChange={handleDisplayFileDetails}\n                      type=\"file\"\n                    />\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md={12}>\n                    <p className=\"text-gray-800 dark:text-gray-200 text-xl font-bold\">Add Hardware</p>\n                  </CCol>\n                </CRow>\n                <CRow className='my-4'>\n                  <CCol md={12} className=\"d-flex justify-content-center align-items-center\">\n                    <CCol md={4} className=''>\n                      <CInputGroup >\n                        <CInputGroupText>\n                          <i class=\"fas fa-star\"></i>\n                        </CInputGroupText>\n                        <CFormInput\n                          placeholder=\"Enter Name\"\n                          value={key}\n                          onChange={(e) => setKey(e.target.value)}\n\n                        />\n                      </CInputGroup>\n                    </CCol>\n                    <CCol md={1}>\n                    </CCol>\n                    <CCol md={5} className=''>\n                      <CInputGroup >\n                        <CInputGroupText>\n                          <i class=\"fas fa-star\"></i>\n                        </CInputGroupText>\n                        <CFormInput\n                          placeholder=\"Enter Value\"\n                          value={value}\n                          onChange={(e) => setValue(e.target.value)}\n\n                        />\n                      </CInputGroup>\n                    </CCol>\n                    <CCol md={2} className=\"d-flex justify-content-center align-items-center\">\n                      <button\n                        className=\" ml-2 py-2 px-4  bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white  transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg\"\n                        onClick={(e) => specificationHandler(e, key, value)}\n                      >\n                        Add\n                      </button>\n                    </CCol>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md={12} >\n                    {specification && specification.map((item) => {\n                      return <CCard className='d-flex justify-content-center mt-2'>\n                        <CCardBody className='d-flex'>\n                          <div className='mx-3'>\n                            <p><span className=\"text-gray-800 dark:text-gray-200 text-md font-bold\">Name:&nbsp; &nbsp;</span>{item.key}</p>\n                          </div>\n                          <div className='mx-3'>\n                            <p><span className=\"text-gray-800 dark:text-gray-200 text-md font-bold\">Value: &nbsp; &nbsp;</span>{item.value}</p>\n                          </div>\n                        </CCardBody>\n\n                      </CCard>\n\n                    })}\n                  </CCol>\n                </CRow>\n\n                <CRow className=\"flex items-center justify-end my-4\">\n                  <CCol md={3} xs={8}>\n                    <button\n                      onClick={submitHandler}\n                      className=\"py-2 px-4 mt-2 bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \"\n                    >\n                      {loading ? \"Loading\" : \"Add Product\"}\n                    </button>\n                  </CCol>\n                </CRow>\n              </CForm>\n            </CCol>\n          </CRow>\n        </div>\n      </main>\n    </>\n  )\n}\n\nexport default AddEquipments\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["props","className","style","margin","breadCrumbsInfo","length","map","item","href","name","allProducts","dispatch","getState","type","ALL_PRODUCT_REQUEST","userInfo","userLogin","config","headers","Authorization","token","axios","BASE_URL","data","ALL_PRODUCT_SUCCESS","payload","ALL_PRODUCT_FAIL","response","message","uploadProduct","formData","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAIL","findProductByQrId","qrId","FIND_PRODUCT_REQUEST","FIND_PRODUCT_SUCCESS","FIND_PRODUCT_FAIL","updateProducts","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","useState","imageUrl","setImageUrl","setQrId","setName","specification","setSpecification","key","setKey","value","setValue","lab","setLab","setUploadedFileName","labs","setLabs","productImage","setProductImage","inputRef","useRef","useDispatch","useSelector","state","addProduct","loading","product","error","generateQrCode","e","preventDefault","id","Date","now","toString","Math","random","QRCode","console","log","useEffect","submitHandler","FormData","append","JSON","stringify","md","color","textAlign","class","placeholder","onChange","target","_id","onClick","download","src","alt","ref","current","files","specificationHandler","xs","_iterableToArray","iter","Symbol","iterator","Array","from","_toConsumableArray","arr","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","TypeError"],"sourceRoot":""}