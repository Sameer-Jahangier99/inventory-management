{"version":3,"file":"static/js/7897.032c0bd4.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","views/pages/noc-requests/RequestTime.js"],"sourcesContent":["import React from 'react'\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst Breadcrumbs = (props) => {\n  return (\n    <div className=\"row bg-white pt-2 pl-2 mb-4 \" style={{ margin: '0px 1px' }}>\n      <div className=\"col-12  \">\n        <CBreadcrumb\n          className=\"d-flex  align-items-center\"\n          style={{ '--cui-breadcrumb-divider': \"'>'\" }}\n        >\n          {props.breadCrumbsInfo &&\n            props.breadCrumbsInfo.length &&\n            props.breadCrumbsInfo.map((item) => {\n              return (\n                <CBreadcrumbItem href={item.href ? item.href : null}>{item.name}</CBreadcrumbItem>\n              )\n            })}\n        </CBreadcrumb>\n      </div>\n    </div>\n  )\n}\n\nexport default Breadcrumbs\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport { BASE_URL } from 'src/services/axios';\nimport { useSelector } from 'react-redux'\nimport {\n    CRow,\n    CCol,\n\n    CButton\n} from '@coreui/react'\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { useHistory } from 'react-router'\nimport Breadcrumbs from 'src/components/Breadcrumbs'\n\n\nconst RequestTime = () => {\n    const breadCrumbsInfo = [{ name: \"Home\", href: '/' }, { name: \"Requests\" }, {\n        name: \"Request Time\"\n    }];\n    const params = useParams();\n    const history = useHistory()\n    const [complaintId, setComplaintId] = useState(params.id);\n    const [request, setRequest] = useState();\n    const [showCalender, setShowCalender] = useState(false);\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [dateToShow, setDateToShow] = useState();\n    const [ApiDate, setApiDate] = useState();\n    const [show, setShow] = useState();\n    const [loading, setLoading] = useState(false);\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const DateSelect = (e) => {\n        var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n        setDateToShow(e.toLocaleDateString(\"en-US\", options))\n        setShow(true)\n        setSelectedDate(e);\n        setApiDate(e);\n    }\n\n\n    useEffect(async () => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n        const { data } = await axios.get(`${BASE_URL}/request/${complaintId}`, config)\n        setRequest(data[0]);\n    }, [])\n\n    console.log(request);\n\n    const submitHandler = async (e, id) => {\n        e.preventDefault();\n\n        if (!ApiDate) {\n            return;\n        }\n        if (ApiDate) {\n            setLoading(true)\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`,\n                },\n            }\n\n            const { data } = await axios.post(`${BASE_URL}/request/deadline/${id}`, { ApiDate }, config)\n            if (data) {\n                setLoading(false)\n                history.push(\"noc/approve/requests\")\n            }\n        }\n\n    }\n\n\n    return (\n        <>\n\n            <main className='main-div'>\n                <Breadcrumbs breadCrumbsInfo={breadCrumbsInfo} />\n                <CRow>\n                    <CCol className='mb-3'>\n                        <button style={{ background: \"#3C4B64\" }} class=\" text-white px-4 py-2 rounded-md text-1xl font-medium hover:bg-blue-700 transition duration-300\" onClick={() => history.push(\"/noc/AllApprovedcomplaints\")}>Go Back</button>\n                    </CCol>\n\n                </CRow>\n                <CRow className=\"d-flex justify-content-center\">\n                    <CCol md={9} className=\"bg-white p-3 shadow-sm rounded-sm \">\n                        <CRow>\n                            <CCol md={6} className=\"d-flex\">\n                                <p className='font-bold'>Title: </p>\n                                <p className='ml-2 font-bold'>{request && request.title && request.title}</p>\n                            </CCol>\n                            {\n                                show && <CCol md={6} className=\"d-flex justify-content-center\">\n                                    <p className='font-bold'>Selected Date: </p>\n                                    <p className='ml-2'>{dateToShow}</p>\n                                </CCol>\n                            }\n\n                        </CRow>\n                        <CRow>\n                            <CCol md={8}>\n\n                                <CRow>\n                                    <CCol md={12} className=\"d-flex\">\n                                        <h6>Complaint Note: </h6>\n                                        <p className='ml-2'>{request && request.note && request.note}</p>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol md={12} className=\"d-flex\">\n                                        <h6>Complaint Type: </h6>\n                                        <p className='ml-2'>{request && request.type}</p>\n                                    </CCol>\n                                </CRow>\n\n                                <CRow>\n                                    <CCol md={12} className=\"d-flex\">\n                                        <h6>Lab: </h6>\n                                        <p className='ml-2'>{request && request.lab && request.lab}</p>\n                                    </CCol>\n                                </CRow>\n\n\n                            </CCol>\n\n\n                        </CRow>\n\n                        <CRow>\n                            <CCol md={4} className=\"\">\n                                <CButton color=\"primary\" className='text-white w-full' onClick={() => setShowCalender(true)}>Select Date</CButton>\n                            </CCol>\n                            <CCol md={4}>\n\n                            </CCol>\n                            <CCol md={4} className=\"d-flex justify-content-end\">\n                                <CButton color=\"primary\" className='text-white w-full' onClick={(e) => submitHandler(e, request && request._id)}>{loading ? \"Sumbiting...\" : \"Submit\"}</CButton>\n                            </CCol>\n\n                        </CRow>\n\n                    </CCol>\n\n                    <CCol md={3} className=\"d-flex justify-content-center\" >\n                        {showCalender && <Calendar onChange={(e) => DateSelect(e)} value={selectedDate} />}\n                    </CCol>\n                </CRow>\n            </main>\n        </>\n    )\n}\n\nexport default RequestTime"],"names":["props","className","style","margin","breadCrumbsInfo","length","map","item","href","name","params","useParams","history","useHistory","useState","id","complaintId","request","setRequest","showCalender","setShowCalender","Date","selectedDate","setSelectedDate","dateToShow","setDateToShow","ApiDate","setApiDate","show","setShow","loading","setLoading","userInfo","useSelector","state","userLogin","useEffect","config","headers","Authorization","token","axios","BASE_URL","data","console","log","submitHandler","e","preventDefault","push","background","class","onClick","md","title","note","type","lab","color","_id","onChange","toLocaleDateString","weekday","year","month","day","DateSelect","value"],"sourceRoot":""}