{"version":3,"file":"static/js/8366.97554e95.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","views/pages/lab/AllLab.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["import React from 'react'\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst Breadcrumbs = (props) => {\n  return (\n    <div className=\"row bg-white pt-2 pl-2 mb-4 \" style={{ margin: '0px 1px' }}>\n      <div className=\"col-12  \">\n        <CBreadcrumb\n          className=\"d-flex  align-items-center\"\n          style={{ '--cui-breadcrumb-divider': \"'>'\" }}\n        >\n          {props.breadCrumbsInfo &&\n            props.breadCrumbsInfo.length &&\n            props.breadCrumbsInfo.map((item) => {\n              return (\n                <CBreadcrumbItem href={item.href ? item.href : null}>{item.name}</CBreadcrumbItem>\n              )\n            })}\n        </CBreadcrumb>\n      </div>\n    </div>\n  )\n}\n\nexport default Breadcrumbs\n","import React, { useEffect, useState } from 'react'\n// import './Alluser.css'\n\nimport axios from 'axios'\nimport {\n  CRow,\n  CCol,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CFormSelect,\n  CButton,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CAlert,\n} from '@coreui/react'\nimport { Checkbox } from 'antd'\nimport Breadcrumbs from 'src/components/Breadcrumbs'\nimport {BASE_URL} from \"../../../services/axios\"\nconst AllLab = () => {\n  const breadCrumbsInfo = [{ name: 'Home', href: '/' }, { name: 'Lab ' }, { name: 'All Labs' }]\n  const [loading, setLoading] = useState(true)\n  const [show, setShow] = useState(false)\n  const [showDelete, setShowDelete] = useState(true)\n  const [id, setId] = useState(null)\n  const [softwares, setSoftwares] = useState()\n  const [software, setSoftware] = useState('')\n  const [name, setName] = useState(null)\n  const [labs, setLabs] = useState()\n\n  useEffect(() => {\n    const AllLab = async () => {\n      const { data } = await axios.get(`${BASE_URL}/lab/allLab`)\n      setLabs(data)\n    }\n\n    AllLab()\n  }, [labs])\n\n  const submitHandler = (lab) => {\n    console.log(lab)\n    setName(lab.name)\n    setId(lab._id)\n    setLoading(false)\n  }\n  const deleteHandler = (id) => {\n    console.log(id)\n  }\n  const handleUpdate = async () => {\n    if (software) {\n      try {\n        const { data } = await axios.put(`${BASE_URL}/lab/updateLab`, { _id: id, softwares: software })\n        if (data) {\n          setShow(true)\n        }\n      } catch (error) {}\n      // setLoading(true)\n    }\n  }\n\n  return (\n    <>\n      <main className=\"main-div\">\n        <Breadcrumbs breadCrumbsInfo={breadCrumbsInfo} />\n        {show && (\n          <main className=\"alert\">\n            <div>\n              <CAlert color=\"success\" style={{ textAlign: 'center' }}>\n                Lab updated\n              </CAlert>\n            </div>\n            <div>\n              <button onClick={() => setShow(false)}>\n                <i class=\"far fa-times-circle\"></i>\n              </button>\n            </div>\n          </main>\n        )}\n        {/* {showDelete &&  (\n          <main className=\"alert\">\n            <div>\n              <CAlert color=\"danger\" style={{ textAlign: 'center' }}>\n                user deleted\n              </CAlert>\n            </div>\n            <div>\n              <button onClick={() => setShowDelete(false)}>\n                <i class=\"far fa-times-circle\"></i>\n              </button>\n            </div>\n          </main>\n        )} */}\n        <div>\n          <h4 className=\"font-semibold\">All Labs</h4>\n        </div>\n        <div className=\"flex flex-col\">\n          <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n            <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n              <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Name\n                      </th>\n\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Edit\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {labs &&\n                      labs.map((lab) => (\n                        <tr key={lab._id}>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <div className=\"ml-4\">\n                                <div className=\"text-sm font-medium text-gray-900\">{lab.name}</div>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <button onClick={() => submitHandler(lab)}>\n                              <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                            </button>\n                            <button\n                              style={{ padding: '5px' }}\n                              onClick={() => deleteHandler(lab._id)}\n                            >\n                              <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        <CModal alignment=\"center\" size=\"lg\" visible={!loading} onClose={() => setLoading(true)}>\n          <CModalHeader>\n            <CModalTitle>\n              {' '}\n              <div className=\"flex items-center space-x-2 font-semibold text-gray-900 leading-8\">\n                <span clas=\"text-green-500\">\n                  <svg\n                    className=\"h-5\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                </span>\n                <span className=\"tracking-wide\">Update Lab</span>\n              </div>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            {loading ? (\n              ''\n            ) : (\n              <div className=\"bg-white p-1 shadow-sm rounded-sm mt-2\">\n                <div className=\"text-gray-700\">\n                  <CRow className=\"justify-content-center\">\n                    <CCol md={12} className=\"bg-white rounded-lg\">\n                      <CForm className=\"row m-2 g-2\">\n                        <CCol md={6}>\n                          <CInputGroup className=\"mb-3\">\n                            <CInputGroupText>\n                              <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                            </CInputGroupText>\n                            <CFormInput\n                              placeholder=\"Name\"\n                              autoComplete=\"\"\n                              value={name}\n                              onChange={(e) => setName(e.target.value)}\n                              required\n                              disabled\n                            />\n                          </CInputGroup>\n                        </CCol>\n                        <CCol md={6} className=\"mb-4\">\n                          <CInputGroup>\n                            <CInputGroupText>\n                              <i className=\"fas fa-envelope-open\"></i>\n                            </CInputGroupText>\n                            <CFormInput\n                              type=\"email\"\n                              placeholder=\"Name of software \"\n                              value={software}\n                              onChange={(e) => setSoftware(e.target.value)}\n                              required\n                            />\n                          </CInputGroup>\n                        </CCol>\n                      </CForm>\n                    </CCol>\n                  </CRow>\n                  <CCol md={3} xs={8}>\n                    <CButton color=\"primary\" onClick={handleUpdate}>\n                      Save changes\n                    </CButton>\n                  </CCol>\n                </div>\n              </div>\n            )}\n          </CModalBody>\n          <CModalFooter>\n            <CButton color=\"danger\" onClick={() => setLoading(true)}>\n              Close\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      </main>\n    </>\n  )\n}\n\nexport default AllLab\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["props","className","style","margin","breadCrumbsInfo","length","map","item","href","name","useState","loading","setLoading","show","setShow","id","setId","software","setSoftware","setName","labs","setLabs","useEffect","AllLab","axios","BASE_URL","data","handleUpdate","_id","softwares","color","textAlign","onClick","class","scope","lab","console","log","submitHandler","padding","deleteHandler","alignment","size","visible","onClose","clas","xmlns","fill","viewBox","stroke","d","md","placeholder","autoComplete","value","onChange","e","target","required","disabled","type","xs","_arrayLikeToArray","arr","len","i","arr2","Array","_arrayWithHoles","isArray","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","nonIterableRest","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","slice","constructor","from","test"],"sourceRoot":""}