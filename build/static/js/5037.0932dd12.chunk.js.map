{"version":3,"file":"static/js/5037.0932dd12.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","services/actions/productActions.js","utils.js/imageUrl.js","views/pages/Inventory/ScanEquipment.js"],"sourcesContent":["import React from 'react'\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst Breadcrumbs = (props) => {\n  return (\n    <div className=\"row bg-white pt-2 pl-2 mb-4 \" style={{ margin: '0px 1px' }}>\n      <div className=\"col-12  \">\n        <CBreadcrumb\n          className=\"d-flex  align-items-center\"\n          style={{ '--cui-breadcrumb-divider': \"'>'\" }}\n        >\n          {props.breadCrumbsInfo &&\n            props.breadCrumbsInfo.length &&\n            props.breadCrumbsInfo.map((item) => {\n              return (\n                <CBreadcrumbItem href={item.href ? item.href : null}>{item.name}</CBreadcrumbItem>\n              )\n            })}\n        </CBreadcrumb>\n      </div>\n    </div>\n  )\n}\n\nexport default Breadcrumbs\n","import {\n  ADD_PRODUCT_REQUEST,\n  ADD_PRODUCT_SUCCESS,\n  ADD_PRODUCT_FAIL,\n  ALL_PRODUCT_REQUEST,\n  ALL_PRODUCT_SUCCESS,\n  ALL_PRODUCT_FAIL,\n  FIND_PRODUCT_REQUEST,\n  FIND_PRODUCT_SUCCESS,\n  FIND_PRODUCT_FAIL,\n  UPDATE_PRODUCT_SUCCESS,\n  UPDATE_PRODUCT_FAIL,\n  UPDATE_PRODUCT_REQUEST,\n} from '../constants/ProductConstants'\n\nimport axios from 'axios'\nimport {BASE_URL} from \"../../services/axios\"\n\nexport const allProducts = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`${BASE_URL}/product`, config)\n\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const uploadProduct = (formData) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADD_PRODUCT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`${BASE_URL}/product`, formData, config)\n\n    dispatch({\n      type: ADD_PRODUCT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ADD_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const findProductByQrId = (qrId) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: FIND_PRODUCT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`${BASE_URL}/product/qrId`, { qrId }, config)\n\n    dispatch({\n      type: FIND_PRODUCT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: FIND_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const updateProducts = (formData) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: UPDATE_PRODUCT_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`${BASE_URL}/product`, formData, config)\n\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n","export const imageUrl = 'https://ims-backend-app.herokuapp.com/public/images/'","import React, { useState } from 'react'\nimport {\n  CContainer,\n  CRow,\n  CCol\n} from '@coreui/react'\nimport QrReader from 'react-qr-reader';\nimport { findProductByQrId } from \"src/services/actions/productActions\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { imageUrl } from 'src/utils.js/imageUrl'\nimport Breadcrumbs from 'src/components/Breadcrumbs'\nconst ScanEquipment = () => {\n  const breadCrumbsInfo = [{ name: \"Home\", href: '/' }, { name: \"Inventory\" }, { name: \"Scan Equipment\" }];\n  const dispatch = useDispatch()\n\n  const [scanResultWebCam, setScanResultWebCam] = useState('');\n  const [showCam, setShowCam] = useState(true);\n  const [displayProduct, setDisplayProduct] = useState(false);\n  const { loading, product, error } = useSelector((state) => state.findProduct)\n\n  console.log(product);\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  }\n  const handleScanWebCam = (result) => {\n    if (result) {\n      setScanResultWebCam(result);\n      dispatch(findProductByQrId(result))\n      setScanResultWebCam('');\n      setShowCam(false);\n      setDisplayProduct(true);\n    }\n  }\n\n  const scanAgain = () => {\n    setShowCam(true);\n    setDisplayProduct(false);\n  }\n\n\n  return (\n    <main>\n      <Breadcrumbs breadCrumbsInfo={breadCrumbsInfo} />\n      <CContainer>\n        <CRow>\n          <CCol md={12} className=\"mb-4\">\n            <h3>Scan Qr Code</h3>\n          </CCol>\n        </CRow>\n        <CRow>\n          {\n            showCam ? <CCol md={4}>\n              <QrReader\n                delay={300}\n                style={{ width: '100%' }}\n                onError={handleErrorWebCam}\n                onScan={handleScanWebCam}\n              />\n            </CCol> : <CCol md={4} className=\"d-flex justify-content-center align-items-center\">\n              <div>\n                <h1 class=\"text-gray-900 font-bold text-2xl text-center\">\n                  Scanned\n                </h1>\n                <button\n                  className=\"py-2 px-4 mt-2 bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \"\n                  onClick={scanAgain}\n                >\n                  Scan Again\n                </button>\n              </div>\n            </CCol>\n\n          }\n          <CCol md={8}>\n            {\n              displayProduct && <div class=\"bg-white overflow-hidden\" >\n                <CRow >\n                  <CCol md={4}>\n                    <img style={{ height: \"100% \", width: \"100%\", objectFit: \"cover\" }} src={`${imageUrl}${product && product.product.productImage}`} alt={product && product.product.name} ></img>\n                  </CCol>\n                  <CCol md={7}>\n                    <CRow>\n                      <CCol md={12}>\n                        <h1 class=\"text-gray-900 font-bold text-2xl text-center\">\n                          {product && product.product.name && product.product.name }\n                        </h1>\n                      </CCol>\n                    </CRow>\n                    <CRow>\n                      <CCol md={6} >\n                        <div className='d-flex'>\n                          <h3 class=\"text-gray-900 font-bold text-xl\">\n                            Lab:\n                          </h3>\n                          <div>\n                            <p class=\"text-gray-600 text-xl ml-4\">\n                              {product && product.product.lab.name}\n                            </p>\n                          </div>\n                        </div>\n                      </CCol>\n                      <CCol md={6} >\n                        <div className='d-flex'>\n                          <h3 class=\"text-gray-900 font-bold text-xl\">\n                            Added By:\n                          </h3>\n                          <div>\n                            <p class=\"text-gray-600 text-xl ml-4\">\n                              {product && product.product.user && product.product.user.name && product.product.user.name }\n                            </p>\n                          </div>\n                        </div>\n                      </CCol>\n                    </CRow>\n                    <CRow>\n                      <CCol md={6}>\n                        <h3 class=\"text-gray-900 font-bold text-xl\">\n                          Specification:\n                        </h3>\n                        {\n                          product && product.product.specification && product.product.specification.map((item) => {\n                            return <div key={item._id} class=\"flex item-center  mt-3\">\n                              <h1 class=\"text-gray-700 font-bold text-xl\">\n                                {item.key}\n                              </h1>\n                              <p class=\"text-gray-600 text-xl ml-4\">\n                                {item.value}\n                              </p>\n                            </div>\n                          })\n                        }\n\n                      </CCol>\n                      <CCol md={6}>\n                        <h3 class=\"text-gray-900 font-bold text-xl\">\n                          Qr Code\n                        </h3>\n                        <div className=\"d-flex justify-content-center align-items-center\">\n                          <a href={product && product.product.imageUrl} download>\n                            <img style={{ width: \"7rem\", height: \"7rem\" }} src={product && product.product.imageUrl} alt={product && product.product.name} ></img>\n                          </a>\n                        </div>\n                      </CCol>\n                    </CRow>\n                  </CCol>\n                </CRow>\n              </div>\n            }\n          </CCol>\n        </CRow>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default ScanEquipment\n"],"names":["props","className","style","margin","breadCrumbsInfo","length","map","item","href","name","allProducts","dispatch","getState","type","ALL_PRODUCT_REQUEST","userInfo","userLogin","config","headers","Authorization","token","axios","BASE_URL","data","ALL_PRODUCT_SUCCESS","payload","ALL_PRODUCT_FAIL","response","message","uploadProduct","formData","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAIL","findProductByQrId","qrId","FIND_PRODUCT_REQUEST","FIND_PRODUCT_SUCCESS","FIND_PRODUCT_FAIL","updateProducts","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","imageUrl","useDispatch","useState","setScanResultWebCam","showCam","setShowCam","displayProduct","setDisplayProduct","useSelector","state","findProduct","product","loading","error","console","log","md","delay","width","onError","onScan","result","class","onClick","height","objectFit","src","productImage","alt","lab","user","specification","key","value","_id","download"],"sourceRoot":""}