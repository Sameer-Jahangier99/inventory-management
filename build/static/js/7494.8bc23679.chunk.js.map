{"version":3,"file":"static/js/7494.8bc23679.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","views/pages/request/AddRequest.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["import React from 'react'\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst Breadcrumbs = (props) => {\n  return (\n    <div className=\"row bg-white pt-2 pl-2 mb-4 \" style={{ margin: '0px 1px' }}>\n      <div className=\"col-12  \">\n        <CBreadcrumb\n          className=\"d-flex  align-items-center\"\n          style={{ '--cui-breadcrumb-divider': \"'>'\" }}\n        >\n          {props.breadCrumbsInfo &&\n            props.breadCrumbsInfo.length &&\n            props.breadCrumbsInfo.map((item) => {\n              return (\n                <CBreadcrumbItem href={item.href ? item.href : null}>{item.name}</CBreadcrumbItem>\n              )\n            })}\n        </CBreadcrumb>\n      </div>\n    </div>\n  )\n}\n\nexport default Breadcrumbs\n","import React, { useState } from 'react'\nimport {\n    CRow,\n    CCol,\n    CForm,\n    CFormInput,\n    CInputGroup,\n    CInputGroupText,\n    CAlert,\n    CFormSelect,\n    CFormTextarea\n} from '@coreui/react'\nimport { useSelector } from 'react-redux'\nimport axios from 'axios';\nimport { BASE_URL } from 'src/services/axios';\nimport Breadcrumbs from 'src/components/Breadcrumbs'\nconst AddRequest = () => {\n    const breadCrumbsInfo = [{ name: \"Home\", href: '/' }, { name: \"Request\" }, { name: \"Add Request\" }];\n    const [request, setRequest] = useState({\n        title: \"\",\n        type: \"\",\n        lab: \"\",\n        note: \"\"\n    })\n    const [loading, setLoading] = useState(false);\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n\n    const submitHandler = async (e) => {\n        e.preventDefault()\n        setLoading(true);\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        let dataToSend = { ...request, user: userInfo._id }\n\n        const { data } = await axios.post(`${BASE_URL}/request/add`, dataToSend, config)\n        if (data.success) {\n            console.log(\"data======>\", data)\n            setLoading(false);\n        }\n\n    }\n\n    return (\n        <>\n            <main>\n                <Breadcrumbs breadCrumbsInfo={breadCrumbsInfo} />\n                <div className=\"bg-white p-3 shadow-sm rounded-sm mt-3\">\n                    <CRow className=\"justify-content-center\">\n                        <CCol md={12} className=\"bg-white rounded-lg\">\n                            <CForm className=\"row mx-4 g-3\" onSubmit={submitHandler}>\n\n\n                                <CCol md={12}>\n                                    <p className=\"text-gray-800 dark:text-gray-200 text-xl font-bold\">Add Request</p>\n                                </CCol>\n                                <CCol md={6}>\n                                    <CInputGroup className=\"mb-3\">\n                                        <CInputGroupText>\n                                            <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                                        </CInputGroupText>\n                                        <CFormInput\n                                            placeholder=\"Title\"\n                                            value={request.title}\n                                            onChange={(e) => setRequest({ ...request, title: e.target.value })}\n                                            required\n                                        />\n                                    </CInputGroup>\n                                </CCol>\n                                <CCol md={6}>\n                                    <CInputGroup className=\"mb-4\">\n                                        <CInputGroupText>\n                                            <i className=\"fas fa-user-tag\"></i>\n                                        </CInputGroupText>\n                                        <CFormSelect\n                                            aria-label=\"Default select example\"\n                                            onChange={(e) => setRequest({ ...request, type: e.target.value })}\n                                        >\n                                            <option>Request Type</option>\n                                            <option value=\"software\">software</option>\n                                            <option value=\"hardware\">hardware</option>\n\n                                        </CFormSelect>\n                                    </CInputGroup>\n                                </CCol>\n                                <CCol md={12}>\n                                    <CInputGroup className=\"mb-4\">\n                                        <CInputGroupText>\n                                            <i className=\"fas fa-user-tag\"></i>\n                                        </CInputGroupText>\n                                        <CFormSelect\n                                            aria-label=\"Default select example\"\n                                            onChange={(e) => setRequest({ ...request, lab: e.target.value })}\n                                        >\n                                            <option>Select Lab</option>\n                                            <option value=\"lab 1\">lab 1</option>\n                                            <option value=\"lab 2\">lab 2</option>\n                                            <option value=\"lab 3\">lab 3</option>\n                                            <option value=\"lab 4\">lab 4</option>\n                                        </CFormSelect>\n                                    </CInputGroup>\n\n                                </CCol>\n\n                                <CCol xs={12}>\n                                    <CInputGroup className=\"mb-4\">\n                                        <CInputGroupText>\n                                            <i className=\"fas fa-user-tag\"></i>\n                                        </CInputGroupText>\n                                        <CFormTextarea id=\"exampleFormControlTextarea1\" value={request.note} onChange={(e) => setRequest({ ...request, note: e.target.value })} placeholder=\"Enter detail of Request\" rows=\"5\"  ></CFormTextarea>\n                                    </CInputGroup>\n                                </CCol>\n                                <CRow className=\"flex items-center justify-start mb-3\">\n                                    <CCol md={3} xs={8}>\n                                        <button\n                                            type=\"submit\"\n                                            className=\"py-2 px-4 mt-2 bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \"\n                                        >\n                                            {loading ? \"Adding...\" : \"Add Request\"}\n                                        </button>\n                                    </CCol>\n                                </CRow>\n                            </CForm>\n                        </CCol>\n                    </CRow>\n                </div>\n            </main>\n        </>\n    )\n}\n\nexport default AddRequest\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["props","className","style","margin","breadCrumbsInfo","length","map","item","href","name","useState","title","type","lab","note","request","setRequest","loading","setLoading","userInfo","useSelector","state","userLogin","submitHandler","e","preventDefault","config","headers","Authorization","token","dataToSend","user","_id","axios","BASE_URL","data","success","console","log","md","onSubmit","placeholder","value","onChange","target","required","xs","id","rows","_arrayLikeToArray","arr","len","i","arr2","Array","_arrayWithHoles","isArray","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","nonIterableRest","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","slice","constructor","from","test"],"sourceRoot":""}